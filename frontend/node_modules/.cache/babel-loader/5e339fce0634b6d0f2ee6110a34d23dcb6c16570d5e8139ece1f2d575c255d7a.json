{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bella\\\\Desktop\\\\Master\\\\Fondament_Ai\\\\Project\\\\Dental_expert_system\\\\frontend\\\\src\\\\App.js\";\n// // // import React, { useState } from \"react\";\n// // // import Navbar from \"./Navbar\"; // Import the Navbar component\n// // // import \"./App.css\";\n\n// // // const App = () => {\n// // //   const [selectedSection, setSelectedSection] = useState(\"\");\n// // //   const [checkedQuestions, setCheckedQuestions] = useState({});\n\n// // //   // Questions for each section\n// // //   const questions = {\n// // //     Gums: [\n// // //       \"What symptoms does the patient have?\",\n// // //       \"What are the patient's medical records?\",\n// // //       \"What is the preliminary diagnosis?\",\n// // //     ],\n// // //     Tooth: [\n// // //       \"What equipment is needed?\",\n// // //       \"Are there any recurring patient issues?\",\n// // //       \"What dental software is being used?\",\n// // //     ],\n// // //     General: [\n// // //       \"What tests are required?\",\n// // //       \"What is the expected delivery date for test results?\",\n// // //       \"Are additional materials needed?\",\n// // //     ],\n// // //   };\n\n// // //   // Handle checkbox toggle\n// // //   const handleCheckboxChange = (section, question) => {\n// // //     setCheckedQuestions((prev) => ({\n// // //       ...prev,\n// // //       [section]: {\n// // //         ...prev[section],\n// // //         [question]: !prev[section]?.[question],\n// // //       },\n// // //     }));\n// // //   };\n\n// // //   return (\n// // //     <div className=\"app-container\">\n// // //       <Navbar />\n// // //       <div className=\"section-buttons\">\n// // //         <button\n// // //           className=\"button-link\"\n// // //           onClick={() => setSelectedSection(\"general\")}\n// // //         >\n// // //           General disease\n// // //         </button>\n// // //         <button\n// // //           className=\"button-link\"\n// // //           onClick={() => setSelectedSection(\"gum\")}\n// // //         >\n// // //           Gum diesese\n// // //         </button>\n// // //         <button\n// // //           className=\"button-link\"\n// // //           onClick={() => setSelectedSection(\"tooth\")}\n// // //         >\n// // //           Tooth diesese\n// // //         </button>\n// // //       </div>\n// // //       <div className=\"questions-section\">\n// // //         {selectedSection && (\n// // //           <div>\n// // //             <h2>\n// // //               {selectedSection === \"general\"\n// // //                 ? \"Questions for general desies\"\n// // //                 : selectedSection === \"gum\"\n// // //                 ? \"Questions for gum\"\n// // //                 : \"Questions for tooth\"}\n// // //             </h2>\n// // //             <form>\n// // //               {questions[selectedSection].map((question, index) => (\n// // //                 <div key={index} className=\"checkbox-item\">\n// // //                   <label>\n// // //                     <input\n// // //                       type=\"checkbox\"\n// // //                       checked={\n// // //                         checkedQuestions[selectedSection]?.[question] || false\n// // //                       }\n// // //                       onChange={() =>\n// // //                         handleCheckboxChange(selectedSection, question)\n// // //                       }\n// // //                     />\n// // //                     {question}\n// // //                   </label>\n// // //                 </div>\n// // //               ))}\n// // //             </form>\n// // //           </div>\n// // //         )}\n// // //       </div>\n// // //       {/* Footer Section */}\n// // //       <footer className=\"footer\">\n// // //         <p>&copy; 2024 Dental Expert System. All rights reserved.</p>\n// // //         <p>\n// // //           Designed with ❤️ by <a href=\"#\">Your Team</a>\n// // //         </p>\n// // //       </footer>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default App;\n\n// // import React, { useState } from \"react\";\n// // import Navbar from \"./Navbar\"; // Import the Navbar component\n// // import \"./App.css\";\n\n// // const App = () => {\n// //   const [selectedSection, setSelectedSection] = useState(\"\");\n// //   const [checkedQuestions, setCheckedQuestions] = useState({});\n\n// //   // Questions for each section\n// //   const questions = {\n// //     general: [\n// //       \"What tests are required?\",\n// //       \"What is the expected delivery date for test results?\",\n// //       \"Are additional materials needed?\",\n// //     ],\n// //     gum: [\n// //       \"What symptoms does the patient have?\",\n// //       \"What are the patient's medical records?\",\n// //       \"What is the preliminary diagnosis?\",\n// //     ],\n// //     tooth: [\n// //       \"What equipment is needed?\",\n// //       \"Are there any recurring patient issues?\",\n// //       \"What dental software is being used?\",\n// //     ],\n// //   };\n\n// //   // Handle checkbox toggle\n// //   const handleCheckboxChange = (section, question) => {\n// //     setCheckedQuestions((prev) => ({\n// //       ...prev,\n// //       [section]: {\n// //         ...prev[section],\n// //         [question]: !prev[section]?.[question],\n// //       },\n// //     }));\n// //   };\n\n// //   return (\n// //     <div className=\"app-container\">\n// //       <Navbar />\n// //       <div className=\"section-buttons\">\n// //         <button\n// //           className=\"button-link\"\n// //           onClick={() => setSelectedSection(\"general\")}\n// //         >\n// //           General disease\n// //         </button>\n// //         <button\n// //           className=\"button-link\"\n// //           onClick={() => setSelectedSection(\"gum\")}\n// //         >\n// //           Gum disease\n// //         </button>\n// //         <button\n// //           className=\"button-link\"\n// //           onClick={() => setSelectedSection(\"tooth\")}\n// //         >\n// //           Tooth disease\n// //         </button>\n// //       </div>\n// //       <div className=\"questions-section\">\n// //         {selectedSection && (\n// //           <div>\n// //             <h2>\n// //               {selectedSection === \"general\"\n// //                 ? \"Questions for general disease\"\n// //                 : selectedSection === \"gum\"\n// //                 ? \"Questions for Gums\"\n// //                 : \"Questions for tooths\"}\n// //             </h2>\n// //             <form>\n// //               {questions[selectedSection].map((question, index) => (\n// //                 <div key={index} className=\"checkbox-item\">\n// //                   <label>\n// //                     <input\n// //                       type=\"checkbox\"\n// //                       checked={\n// //                         checkedQuestions[selectedSection]?.[question] || false\n// //                       }\n// //                       onChange={() =>\n// //                         handleCheckboxChange(selectedSection, question)\n// //                       }\n// //                     />\n// //                     {question}\n// //                   </label>\n// //                 </div>\n// //               ))}\n// //             </form>\n// //           </div>\n// //         )}\n// //       </div>\n// //       {/* Footer Section */}\n// //       <footer className=\"footer\">\n// //         <p>&copy; 2024 Dental Expert System. All rights reserved.</p>\n// //         <p>\n// //           Designed with ❤️ by <a href=\"#\">Your Team</a>\n// //         </p>\n// //       </footer>\n// //     </div>\n// //   );\n// // };\n\n// // export default App;\n\n// import React, { useState } from \"react\";\n// import Layout from \"./layout.js\"; // Import the Layout component\n// import \"./App.css\";\n\n// const App = () => {\n//   const [selectedSection, setSelectedSection] = useState(\"\");\n//   const [checkedQuestions, setCheckedQuestions] = useState({});\n//   const [diagnosis, setDiagnosis] = useState(null); // State for diagnosis result\n//   // Questions for each section\n//   const questions = {\n//     general: [\n//       \"Do you find it hard to chew food?\",\n//       \"Are your gums swollen or red?\",\n//       \"Have you been experiencing a fever?\",\n//       \"Do your gums feel painful or tender, even without touching them?\",\n//       \"Have you been experiencing a fever?\",\n//       \"Have you noticed any pus or festering around your gums or teeth?\",\n//       \"Do you feel pain when opening your mouth?\",\n//       \"Do you have a toothache or throbbing pain in your teeth?\",\n//       \"Are your teeth more sensitive than usual?\",\n//       \"Do you have sores or pockets between your teeth and gums?\",\n//       \"Have you noticed your gums forming a circular shape?\",\n//       \"Do your gums feel soft or inconsistent in texture?\",\n//       \"Are your cheeks swollen?\",\n//       \"Do your teeth appear longer than normal?\",\n//       \"Are any of your teeth loose or wobbly?\",\n//     ],\n//     gum: [\n//       \"What symptoms does the patient have?\",\n//       \"What are the patient's medical records?\",\n//       \"What is the preliminary diagnosis?\",\n//     ],\n//     tooth: [\n//       \"What equipment is needed?\",\n//       \"Are there any recurring patient issues?\",\n//       \"What dental software is being used?\",\n//     ],\n//   };\n\n//   // Handle checkbox toggle\n//   const handleCheckboxChange = (section, question) => {\n//     setCheckedQuestions((prev) => ({\n//       ...prev,\n//       [section]: {\n//         ...prev[section],\n//         [question]: !prev[section]?.[question],\n//       },\n//     }));\n//   };\n\n//   // Handle section change\n//   const handleSectionChange = (section) => {\n//     setSelectedSection(section);\n//     setDiagnosis(null); // Clear diagnosis when a new section is selected\n//   };\n\n//   // Handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Extract the indices of the selected questions\n//     const selectedIndices = Object.entries(\n//       checkedQuestions[selectedSection] || {}\n//     )\n//       .filter(([_, isChecked]) => isChecked) // Keep only checked questions\n//       .map(([question]) => {\n//         // Map the question back to its index in the original array\n//         return questions[selectedSection].indexOf(question);\n//       });\n\n//     const payload = {\n//       category: selectedSection, // Send the category\n//       indices: selectedIndices,  // Send the indices of selected questions\n//     };\n\n//     const response = await fetch(\"http://127.0.0.1:5000/api/submit\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(payload),\n//     });\n\n//     try{  \n//       if (response.ok) {\n//         const data = await response.json();\n//         setDiagnosis(data['prediction']); // Store the response in the state\n//       } else {\n//         alert(\"Failed to submit. Please try again.\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error submitting data:\", error);\n//       alert(\"An error occurred while submitting data.\");\n//     }\n//   };\n\n//   return (\n//     <Layout>\n//       <div className=\"section-buttons\">\n//         <button\n//           className=\"button-link\"\n//           onClick={() => handleSectionChange(\"general\")}\n//         >\n//           General disease\n//         </button>\n//         <button\n//           className=\"button-link\"\n//           onClick={() => handleSectionChange(\"gum\")}\n//         >\n//           Gum disease\n//         </button>\n//         <button\n//           className=\"button-link\"\n//           onClick={() => handleSectionChange(\"tooth\")}\n//         >\n//           Tooth disease\n//         </button>\n//       </div>\n//       <div className=\"questions-section\">\n//         {selectedSection && (\n//           <div>\n//             <h2>Questions for {selectedSection}</h2>\n//             <form onSubmit={handleSubmit}>\n//               {questions[selectedSection].map((question, index) => (\n//                 <div key={index} className=\"checkbox-item\">\n//                   <label>\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={\n//                         checkedQuestions[selectedSection]?.[question] || false\n//                       }\n//                       onChange={() =>\n//                         handleCheckboxChange(selectedSection, question)\n//                       }\n//                     />\n//                     {question}\n//                   </label>\n//                 </div>\n//               ))}\n//               <button type=\"submit\" className=\"submit-btn\">\n//                 Submit\n//               </button>\n//               <div id='diagnose'>\n//               {/* Render the diagnosis response */}\n//               {diagnosis ? (\n//                 <div>\n//                   <h3>Diagnosis Result:</h3>\n//                   <pre>{JSON.stringify(diagnosis, null, 2)}</pre>\n//                 </div>\n//               ) :(<div></div>)\n//               }\n//               </div>\n//             </form>\n//           </div>\n//         )}\n//       </div>\n//     </Layout>\n//   );\n// };\n\n// export default App;\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Home from './Home';\nimport About from './About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 385,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","Home","About","jsxDEV","_jsxDEV","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bella/Desktop/Master/Fondament_Ai/Project/Dental_expert_system/frontend/src/App.js"],"sourcesContent":["// // // import React, { useState } from \"react\";\r\n// // // import Navbar from \"./Navbar\"; // Import the Navbar component\r\n// // // import \"./App.css\";\r\n\r\n// // // const App = () => {\r\n// // //   const [selectedSection, setSelectedSection] = useState(\"\");\r\n// // //   const [checkedQuestions, setCheckedQuestions] = useState({});\r\n\r\n// // //   // Questions for each section\r\n// // //   const questions = {\r\n// // //     Gums: [\r\n// // //       \"What symptoms does the patient have?\",\r\n// // //       \"What are the patient's medical records?\",\r\n// // //       \"What is the preliminary diagnosis?\",\r\n// // //     ],\r\n// // //     Tooth: [\r\n// // //       \"What equipment is needed?\",\r\n// // //       \"Are there any recurring patient issues?\",\r\n// // //       \"What dental software is being used?\",\r\n// // //     ],\r\n// // //     General: [\r\n// // //       \"What tests are required?\",\r\n// // //       \"What is the expected delivery date for test results?\",\r\n// // //       \"Are additional materials needed?\",\r\n// // //     ],\r\n// // //   };\r\n\r\n// // //   // Handle checkbox toggle\r\n// // //   const handleCheckboxChange = (section, question) => {\r\n// // //     setCheckedQuestions((prev) => ({\r\n// // //       ...prev,\r\n// // //       [section]: {\r\n// // //         ...prev[section],\r\n// // //         [question]: !prev[section]?.[question],\r\n// // //       },\r\n// // //     }));\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <div className=\"app-container\">\r\n// // //       <Navbar />\r\n// // //       <div className=\"section-buttons\">\r\n// // //         <button\r\n// // //           className=\"button-link\"\r\n// // //           onClick={() => setSelectedSection(\"general\")}\r\n// // //         >\r\n// // //           General disease\r\n// // //         </button>\r\n// // //         <button\r\n// // //           className=\"button-link\"\r\n// // //           onClick={() => setSelectedSection(\"gum\")}\r\n// // //         >\r\n// // //           Gum diesese\r\n// // //         </button>\r\n// // //         <button\r\n// // //           className=\"button-link\"\r\n// // //           onClick={() => setSelectedSection(\"tooth\")}\r\n// // //         >\r\n// // //           Tooth diesese\r\n// // //         </button>\r\n// // //       </div>\r\n// // //       <div className=\"questions-section\">\r\n// // //         {selectedSection && (\r\n// // //           <div>\r\n// // //             <h2>\r\n// // //               {selectedSection === \"general\"\r\n// // //                 ? \"Questions for general desies\"\r\n// // //                 : selectedSection === \"gum\"\r\n// // //                 ? \"Questions for gum\"\r\n// // //                 : \"Questions for tooth\"}\r\n// // //             </h2>\r\n// // //             <form>\r\n// // //               {questions[selectedSection].map((question, index) => (\r\n// // //                 <div key={index} className=\"checkbox-item\">\r\n// // //                   <label>\r\n// // //                     <input\r\n// // //                       type=\"checkbox\"\r\n// // //                       checked={\r\n// // //                         checkedQuestions[selectedSection]?.[question] || false\r\n// // //                       }\r\n// // //                       onChange={() =>\r\n// // //                         handleCheckboxChange(selectedSection, question)\r\n// // //                       }\r\n// // //                     />\r\n// // //                     {question}\r\n// // //                   </label>\r\n// // //                 </div>\r\n// // //               ))}\r\n// // //             </form>\r\n// // //           </div>\r\n// // //         )}\r\n// // //       </div>\r\n// // //       {/* Footer Section */}\r\n// // //       <footer className=\"footer\">\r\n// // //         <p>&copy; 2024 Dental Expert System. All rights reserved.</p>\r\n// // //         <p>\r\n// // //           Designed with ❤️ by <a href=\"#\">Your Team</a>\r\n// // //         </p>\r\n// // //       </footer>\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default App;\r\n\r\n// // import React, { useState } from \"react\";\r\n// // import Navbar from \"./Navbar\"; // Import the Navbar component\r\n// // import \"./App.css\";\r\n\r\n// // const App = () => {\r\n// //   const [selectedSection, setSelectedSection] = useState(\"\");\r\n// //   const [checkedQuestions, setCheckedQuestions] = useState({});\r\n\r\n// //   // Questions for each section\r\n// //   const questions = {\r\n// //     general: [\r\n// //       \"What tests are required?\",\r\n// //       \"What is the expected delivery date for test results?\",\r\n// //       \"Are additional materials needed?\",\r\n// //     ],\r\n// //     gum: [\r\n// //       \"What symptoms does the patient have?\",\r\n// //       \"What are the patient's medical records?\",\r\n// //       \"What is the preliminary diagnosis?\",\r\n// //     ],\r\n// //     tooth: [\r\n// //       \"What equipment is needed?\",\r\n// //       \"Are there any recurring patient issues?\",\r\n// //       \"What dental software is being used?\",\r\n// //     ],\r\n// //   };\r\n\r\n// //   // Handle checkbox toggle\r\n// //   const handleCheckboxChange = (section, question) => {\r\n// //     setCheckedQuestions((prev) => ({\r\n// //       ...prev,\r\n// //       [section]: {\r\n// //         ...prev[section],\r\n// //         [question]: !prev[section]?.[question],\r\n// //       },\r\n// //     }));\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"app-container\">\r\n// //       <Navbar />\r\n// //       <div className=\"section-buttons\">\r\n// //         <button\r\n// //           className=\"button-link\"\r\n// //           onClick={() => setSelectedSection(\"general\")}\r\n// //         >\r\n// //           General disease\r\n// //         </button>\r\n// //         <button\r\n// //           className=\"button-link\"\r\n// //           onClick={() => setSelectedSection(\"gum\")}\r\n// //         >\r\n// //           Gum disease\r\n// //         </button>\r\n// //         <button\r\n// //           className=\"button-link\"\r\n// //           onClick={() => setSelectedSection(\"tooth\")}\r\n// //         >\r\n// //           Tooth disease\r\n// //         </button>\r\n// //       </div>\r\n// //       <div className=\"questions-section\">\r\n// //         {selectedSection && (\r\n// //           <div>\r\n// //             <h2>\r\n// //               {selectedSection === \"general\"\r\n// //                 ? \"Questions for general disease\"\r\n// //                 : selectedSection === \"gum\"\r\n// //                 ? \"Questions for Gums\"\r\n// //                 : \"Questions for tooths\"}\r\n// //             </h2>\r\n// //             <form>\r\n// //               {questions[selectedSection].map((question, index) => (\r\n// //                 <div key={index} className=\"checkbox-item\">\r\n// //                   <label>\r\n// //                     <input\r\n// //                       type=\"checkbox\"\r\n// //                       checked={\r\n// //                         checkedQuestions[selectedSection]?.[question] || false\r\n// //                       }\r\n// //                       onChange={() =>\r\n// //                         handleCheckboxChange(selectedSection, question)\r\n// //                       }\r\n// //                     />\r\n// //                     {question}\r\n// //                   </label>\r\n// //                 </div>\r\n// //               ))}\r\n// //             </form>\r\n// //           </div>\r\n// //         )}\r\n// //       </div>\r\n// //       {/* Footer Section */}\r\n// //       <footer className=\"footer\">\r\n// //         <p>&copy; 2024 Dental Expert System. All rights reserved.</p>\r\n// //         <p>\r\n// //           Designed with ❤️ by <a href=\"#\">Your Team</a>\r\n// //         </p>\r\n// //       </footer>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default App;\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import Layout from \"./layout.js\"; // Import the Layout component\r\n// import \"./App.css\";\r\n\r\n// const App = () => {\r\n//   const [selectedSection, setSelectedSection] = useState(\"\");\r\n//   const [checkedQuestions, setCheckedQuestions] = useState({});\r\n//   const [diagnosis, setDiagnosis] = useState(null); // State for diagnosis result\r\n//   // Questions for each section\r\n//   const questions = {\r\n//     general: [\r\n//       \"Do you find it hard to chew food?\",\r\n//       \"Are your gums swollen or red?\",\r\n//       \"Have you been experiencing a fever?\",\r\n//       \"Do your gums feel painful or tender, even without touching them?\",\r\n//       \"Have you been experiencing a fever?\",\r\n//       \"Have you noticed any pus or festering around your gums or teeth?\",\r\n//       \"Do you feel pain when opening your mouth?\",\r\n//       \"Do you have a toothache or throbbing pain in your teeth?\",\r\n//       \"Are your teeth more sensitive than usual?\",\r\n//       \"Do you have sores or pockets between your teeth and gums?\",\r\n//       \"Have you noticed your gums forming a circular shape?\",\r\n//       \"Do your gums feel soft or inconsistent in texture?\",\r\n//       \"Are your cheeks swollen?\",\r\n//       \"Do your teeth appear longer than normal?\",\r\n//       \"Are any of your teeth loose or wobbly?\",\r\n//     ],\r\n//     gum: [\r\n//       \"What symptoms does the patient have?\",\r\n//       \"What are the patient's medical records?\",\r\n//       \"What is the preliminary diagnosis?\",\r\n//     ],\r\n//     tooth: [\r\n//       \"What equipment is needed?\",\r\n//       \"Are there any recurring patient issues?\",\r\n//       \"What dental software is being used?\",\r\n//     ],\r\n//   };\r\n\r\n//   // Handle checkbox toggle\r\n//   const handleCheckboxChange = (section, question) => {\r\n//     setCheckedQuestions((prev) => ({\r\n//       ...prev,\r\n//       [section]: {\r\n//         ...prev[section],\r\n//         [question]: !prev[section]?.[question],\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   // Handle section change\r\n//   const handleSectionChange = (section) => {\r\n//     setSelectedSection(section);\r\n//     setDiagnosis(null); // Clear diagnosis when a new section is selected\r\n//   };\r\n\r\n\r\n//   // Handle form submission\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Extract the indices of the selected questions\r\n//     const selectedIndices = Object.entries(\r\n//       checkedQuestions[selectedSection] || {}\r\n//     )\r\n//       .filter(([_, isChecked]) => isChecked) // Keep only checked questions\r\n//       .map(([question]) => {\r\n//         // Map the question back to its index in the original array\r\n//         return questions[selectedSection].indexOf(question);\r\n//       });\r\n  \r\n//     const payload = {\r\n//       category: selectedSection, // Send the category\r\n//       indices: selectedIndices,  // Send the indices of selected questions\r\n//     };\r\n\r\n    \r\n//     const response = await fetch(\"http://127.0.0.1:5000/api/submit\", {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify(payload),\r\n//     });\r\n\r\n//     try{  \r\n//       if (response.ok) {\r\n//         const data = await response.json();\r\n//         setDiagnosis(data['prediction']); // Store the response in the state\r\n//       } else {\r\n//         alert(\"Failed to submit. Please try again.\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting data:\", error);\r\n//       alert(\"An error occurred while submitting data.\");\r\n//     }\r\n//   };\r\n  \r\n//   return (\r\n//     <Layout>\r\n//       <div className=\"section-buttons\">\r\n//         <button\r\n//           className=\"button-link\"\r\n//           onClick={() => handleSectionChange(\"general\")}\r\n//         >\r\n//           General disease\r\n//         </button>\r\n//         <button\r\n//           className=\"button-link\"\r\n//           onClick={() => handleSectionChange(\"gum\")}\r\n//         >\r\n//           Gum disease\r\n//         </button>\r\n//         <button\r\n//           className=\"button-link\"\r\n//           onClick={() => handleSectionChange(\"tooth\")}\r\n//         >\r\n//           Tooth disease\r\n//         </button>\r\n//       </div>\r\n//       <div className=\"questions-section\">\r\n//         {selectedSection && (\r\n//           <div>\r\n//             <h2>Questions for {selectedSection}</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//               {questions[selectedSection].map((question, index) => (\r\n//                 <div key={index} className=\"checkbox-item\">\r\n//                   <label>\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={\r\n//                         checkedQuestions[selectedSection]?.[question] || false\r\n//                       }\r\n//                       onChange={() =>\r\n//                         handleCheckboxChange(selectedSection, question)\r\n//                       }\r\n//                     />\r\n//                     {question}\r\n//                   </label>\r\n//                 </div>\r\n//               ))}\r\n//               <button type=\"submit\" className=\"submit-btn\">\r\n//                 Submit\r\n//               </button>\r\n//               <div id='diagnose'>\r\n//               {/* Render the diagnosis response */}\r\n//               {diagnosis ? (\r\n//                 <div>\r\n//                   <h3>Diagnosis Result:</h3>\r\n//                   <pre>{JSON.stringify(diagnosis, null, 2)}</pre>\r\n//                 </div>\r\n//               ) :(<div></div>)\r\n//               }\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </Layout>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Home from './Home';\r\nimport About from './About';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/about\" element={<About />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA,CAACN,MAAM;IAAAQ,QAAA,eACLF,OAAA,CAACJ,MAAM;MAAAM,QAAA,gBACLF,OAAA,CAACL,KAAK;QAACQ,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEJ,OAAA,CAACH,IAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCR,OAAA,CAACL,KAAK;QAACQ,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEJ,OAAA,CAACF,KAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACC,EAAA,GATQR,GAAG;AAWZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}